#!/usr/bin/env gnode

var path_ = require('path')
var confirm = require('co-prompt').confirm
var co = require('co')

require('colors')

process.env.DEBUG = 'curio* cached* -*:debug'
process.env.NODE_ENV = 'test'

// application level absolute require
global.require_ = function(path) {
  return require(path_.join(__dirname, '../', path))
}

process.on('uncaughtException', function(err) {
  if (err.clientError) {
    console.log(err)
  } else {
    throw err
  }
  process.exit()
})

var program = require('nomnom')

program
  .option('version', {
    abbr: 'v',
    flag: true,
    help: 'Print program version',
    callback: function() {
      return require('../package.json').version
    }
  })

program
  .command('init_db')
  .option('force', {
    abbr: 'f',
    flag: true,
  })
  .callback(co(function *(opts) {
    var ok = opts.force
    if (!ok) {
      ok = yield confirm('This will drop all existing tables, continue? (y/N) '.red)
    }
    if (ok) {
      yield require_('database').init()
    } else {
      console.log()
      console.log('Init database canceled.')
    }
    process.exit()
  }))
  .help('init database')


program
  .command('fillup')
  .callback(co(function *(opts) {
    if (opts[1]) {
      yield require_('test/init/' + opts[1]).fillup
    } else {
      yield require_('test/init').fillupAll
    }
    process.exit()
  }))

program.parse()


// vim: set filetype=javascript:
